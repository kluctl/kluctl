name: build-and-release

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
      tags: ${{ steps.gen_tags.outputs.tags }}
    steps:
      - name: Install packages
        run: |
          sudo apt update
          sudo apt install -y git
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get sv4git
        run: |
          wget -O /tmp/sv4git.zip https://github.com/bvieira/sv4git/releases/download/v2.4.0/git-sv_2.4.0_linux_amd64.tar.gz
          cd /usr/local/bin
          tar xzf /tmp/sv4git.zip
          chmod +x git-sv
      - name: Get Version
        id: get_version
        run: |
          VERSION="$(git sv next-version)"
          if [[ "${{ github.ref }}" != refs/tags/* ]]; then
            VERSION="$VERSION-dev-$(git rev-parse --short HEAD)"
          fi
          echo "VERSION=$VERSION"
          echo "::set-output name=version::$VERSION"
      - name: Generate tags
        id: gen_tags
        run: |
          IMAGE=codablock/kluctl
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            TAGS="$IMAGE:$(echo "${{ github.ref }}" | sed 's|refs/tags/||')"
          else
            TAGS="$IMAGE:$(echo "${{ github.ref }}" | sed 's|refs/heads/||')"
          fi
          echo TAGS=$TAGS
          echo "::set-output name=tags::$TAGS"
      - name: Generate Changelog
        id: gen_changelog
        run: |
          git sv changelog -n 1 > CHANGELOG.md
      - name: Upload Changelog
        uses: actions/upload-artifact@v2
        with:
          name: changelog
          path: |
            CHANGELOG.md

  docker:
    runs-on: ubuntu-latest
    needs:
      - version
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Write Version to _version.py
        run: |
          echo "__version__ = '${{ needs.version.outputs.version }}'" > kluctl/_version.py
          cat kluctl/_version.py
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ needs.version.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  pyinstaller:
    needs:
      - version
    strategy:
      matrix:
        os: [ubuntu-18.04, macos-10.15, windows-2016]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.0
      - name: Write Version to _version.py
        run: |
          echo "__version__ = '${{ needs.version.outputs.version }}'" > kluctl/_version.py
          cat kluctl/_version.py
      - name: Install libyaml-dev on Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install libyaml-dev binutils gcc -y
          pip install "pyyaml==5.4.1" --global-option=--with-libyaml
      - name: Install libyaml on MacOS
        if: runner.os == 'macOS'
        run: |
          brew install libyaml
          pip install "pyyaml==5.4.1" --global-option=--with-libyaml
      - name: Install kluctl
        run: |
          pip install .
          pip install -r requirements-dev.txt
      - name: Run Pyinstaller
        run: |
          pyinstaller kluctl.spec
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist-binary-${{ matrix.os }}
          path: |
            dist

  publish_pypi:
    needs:
      - version
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.0
      - name: Write Version to _version.py
        run: |
          echo "__version__ = '${{ needs.version.outputs.version }}'" > kluctl/_version.py
          cat kluctl/_version.py
      - name: Install pypa/build
        run: >-
          python -m
          pip install
          build
          --user
      - name: Build a binary wheel and a source tarball
        run: >-
          python -m
          build
          --sdist
          --wheel
          --outdir dist/
          .
      # TODO this fails atm due to invalid version numbers (the git hash...)
      #- name: Publish distribution ðŸ“¦ to Test PyPI
      #  uses: pypa/gh-action-pypi-publish@release/v1
      #  with:
      #    user: __token__
      #    password: ${{ secrets.TEST_PYPI_API_TOKEN }}
      #    repository_url: https://test.pypi.org/legacy/
      - name: Publish distribution ðŸ“¦ to PyPI
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

  release:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    needs:
      - version
      - docker
      - pyinstaller
    steps:
        - name: Checkout
          uses: actions/checkout@v2
        - name: Download artifacts
          uses: actions/download-artifact@v2
        - name: find
          run: |
            find .
        - name: Prepare release-files
          run: |
            mkdir dist
            mv dist-binary-ubuntu-18.04/kluctl dist/kluctl-linux-amd64
            mv dist-binary-macos-10.15/kluctl dist/kluctl-darwin-amd64
            mv dist-binary-windows-2016/kluctl.exe dist/kluctl-windows-amd64.exe
        - name: Release
          uses: softprops/action-gh-release@v1
          with:
            draft: false
            body_path: changelog/CHANGELOG.md
            files: |
              dist/*
