before:
  hooks:
    - go mod tidy
builds:
  - <<: &build_defaults
      binary: bin/kluctl
      env:
        - CGO_ENABLED=0
      main: ./cmd
    id: linux
    goos:
      - linux
    goarch:
      - amd64
      - arm64
    goarm:
      - 7
  - <<: *build_defaults
    id: darwin
    goos:
      - darwin
    goarch:
      - amd64
      - arm64
  - <<: *build_defaults
    id: windows
    goos:
      - windows
    goarch:
      - amd64
archives:
  - name_template: "{{ .Binary }}_v{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    id: nix
    builds: [linux, darwin]
    format: tar.gz
    files:
      - none*
  - name_template: "{{ .Binary }}_v{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    id: windows
    builds: [windows]
    format: zip
    files:
      - none*
source:
  enabled: true
  name_template: '{{ .ProjectName }}_v{{ .Version }}_source_code'
sboms:
  - id: source
    artifacts: source
    documents:
      - "{{ .ProjectName }}_v{{ .Version }}_sbom.spdx.json"
checksum:
  name_template: '{{ .ProjectName }}_v{{ .Version }}_checksums.txt'
snapshot:
  name_template: "{{ incminor .Version }}-snapshot"
nightly:
  name_template: '{{ incminor .Version }}-devel'
  tag_name: devel
  publish_release: true
  keep_single_release: true
changelog:
  sort: asc
  filters:
    exclude:
      - '^doc.*:'
      - '^test.*:'
      - '^chore:'
      - '^build:'
      - '^ci:'
      - '^refactor:'

release:
  draft: true
  prerelease: auto
  name_template: "{{ .ProjectName }}-v{{ .Version }}"
  header: |
    {{- if .IsNightly -}}
    ## Development build
    This is a development build of the main branch and not meant for production use.
    Docker images are also available via: `ghcr.io/kluctl/kluctl:v{{ .Version }}`
    {{- end -}}

dockers:
  - id: linux-amd64
    goos: linux
    goarch: amd64
    build_flag_templates:
      - "--pull"
      - "--build-arg=ARCH=linux-amd64"
      - "--label=org.opencontainers.image.created={{ .Date }}"
      - "--label=org.opencontainers.image.name={{ .ProjectName }}"
      - "--label=org.opencontainers.image.revision={{ .FullCommit }}"
      - "--label=org.opencontainers.image.version={{ .Version }}"
      - "--label=org.opencontainers.image.source={{ .GitURL }}"
      - "--platform=linux/amd64"
    image_templates:
      - "ghcr.io/kluctl/kluctl:v{{ .Version }}-amd64"
  - id: linux-arm64
    goos: linux
    goarch: arm64
    build_flag_templates:
      - "--pull"
      - "--build-arg=ARCH=linux-arm64"
      - "--label=org.opencontainers.image.created={{ .Date }}"
      - "--label=org.opencontainers.image.name={{ .ProjectName }}"
      - "--label=org.opencontainers.image.revision={{ .FullCommit }}"
      - "--label=org.opencontainers.image.version={{ .Version }}"
      - "--label=org.opencontainers.image.source={{ .GitURL }}"
      - "--platform=linux/arm64"
    image_templates:
      - "ghcr.io/kluctl/kluctl:v{{ .Version }}-arm64"

docker_manifests:
  - name_template: ghcr.io/kluctl/kluctl:v{{ .Version }}
    image_templates:
      - "ghcr.io/kluctl/kluctl:v{{ .Version }}-amd64"
      - "ghcr.io/kluctl/kluctl:v{{ .Version }}-arm64"

brews:
  - name: kluctl
    tap:
      owner: kluctl
      name: homebrew-tap
      token: "{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"
    folder: Formula
    homepage: "https://kluctl.io/"
    description: "kluctl"
    install: |
      bin.install "kluctl"

      bash_output = Utils.safe_popen_read(bin/"kluctl", "completion", "bash")
      (bash_completion/"kluctl").write bash_output

      zsh_output = Utils.safe_popen_read(bin/"kluctl", "completion", "zsh")
      (zsh_completion/"_kluctl").write zsh_output

      fish_output = Utils.safe_popen_read(bin/"kluctl", "completion", "fish")
      (fish_completion/"kluctl.fish").write fish_output
    test: |
      system "#{bin}/kluctl version"
