title: .kluctl.yml schema
type: object
definitions:
  git_url:
    anyOf:
      - type: string
        pattern:
          ^(\w+:\/\/)(.+@)?([\w\d\.]+)(:[\d]+)?\/*(.*)$
      - type: string
        pattern:
          ^(.+@)?([\w\d\.]+):(.*)$
  git_ref:
    anyOf:
      - type: string
        # See https://stackoverflow.com/questions/12093748/how-do-i-check-for-valid-git-branch-names
        pattern:
          ^(?!.*/\.)(?!.*\.\.)(?!/)(?!.*//)(?!.*@\{)(?!.*\\)[^\000-\037\177 ~^:?*[]+/[^\000-\037\177 ~^:?*[]+(?<!\.lock)(?<!/)(?<!\.)$
      - type: string
        # Only last part of the above + / in the [] part
        pattern:
          ^[^\000-\037\177 ~^:?*[/]+(?<!\.lock)(?<!/)(?<!\.)$

  git_project:
    oneOf:
      - $ref: "#/definitions/git_url"
      - type: object
        additionalProperties: false
        required:
          - url
        properties:
          url:
            $ref: "#/definitions/git_url"
          ref:
            $ref: "#/definitions/git_ref"
          subdir:
            type: string
            pattern: "[^/]*"

  external_project:
    type: object
    additionalProperties: false
    required: [ project ]
    properties:
      project:
        $ref: "#/definitions/git_project"

  target:
    type: object
    additionalProperties: false
    required:
      - name
      - cluster
    properties:
      name:
        type: string
      cluster:
        type: string
      args:
        type: object
        additionalProperties:
          type: string
      dynamicArgs:
        type: array
        items:
          type: object
          additionalProperties: false
          required:
            - name
          properties:
            name:
              type: string
            pattern:
              type: string
      targetConfig:
        type: object
        additionalProperties: false
        properties:
          project:
            $ref: "#/definitions/git_project"
          ref:
            type: string
            description: Branch/Tag to be used. Can't be combined with 'refPattern'. If 'branch' and 'branchPattern' are not used, 'branch' defaults to the default branch of targetConfig.project
          refPattern:
            type: string
            description: If set, multiple dynamic targets are created, each with 'ref' being set to the ref that matched the given pattern.
          file:
            type: string
            description: defaults to 'target-config.yml'
            default: target-config.yml
      sealingConfig:
        type: object
        additionalProperties: false
        properties:
          dynamicSealing:
            type: boolean
            description: Set this to false if you want to disable sealing for every dynamic target
            default: true
          args:
            type: object
            additionalProperties:
              type: string
          secretSets:
            type: array
            items:
              type: string

  secret_set:
    type: object
    additionalProperties: false
    required:
      - name
      - sources
    properties:
      name:
        type: string
        description: The name of the secret set
      sources:
        type: array
        items:
          oneOf:
            - $ref: "#/definitions/secret_source_path"
            - $ref: "#/definitions/secret_source_passwordstate"
            - $ref: "#/definitions/secret_source_aws_secrets_manager"

  secret_source_path:
    type: object
    additionalProperties: false
    required:
      - path
    properties:
      path:
        type: string
        description: Relative path to secret file

  secret_source_passwordstate:
    type: object
    additionalProperties: false
    required:
      - passwordstate
    properties:
      passwordstate:
        type: object
        additionalProperties: false
        required:
          - host
          - passwordList
          - passwordTitle
        properties:
          host:
            type: string
            description: Host of the passwordstate instance
          passwordList:
            type: string
            description: Path of the password list
          passwordTitle:
            type: string
            description: Title of the password entry
          passwordField:
            type: string
            description: Field name where to load secret file from
            default: GenericField1

  secret_source_aws_secrets_manager:
    type: object
    additionalProperties: false
    required:
      - awsSecretsManager
    properties:
      awsSecretsManager:
        type: object
        additionalProperties: false
        required:
          - secretName
        properties:
          secretName:
            type: string
            description: Name or ARN of the secret. In case a name is given, the region must be specified as well
          region:
            type: string
            description: The aws region
          profile:
            type: string
            description: AWS credentials profile to use. The AWS_PROFILE environemnt variables will take predence in case it is also set

additionalProperties: false
required:
  - targets
properties:
  deployment:
    $ref: "#/definitions/external_project"
  sealedSecrets:
    $ref: "#/definitions/external_project"
  clusters:
    oneOf:
      - $ref: "#/definitions/external_project"
      - type: array
        items:
          $ref: "#/definitions/external_project"
  targets:
    type: array
    items:
      $ref: "#/definitions/target"
  secretsConfig:
    type: object
    additionalProperties: false
    properties:
      secretSets:
        type: array
        items:
          $ref: "#/definitions/secret_set"